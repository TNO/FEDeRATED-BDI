
plugins {
    id 'org.jetbrains.kotlin.plugin.spring' version "$kotlin_version"
    id 'org.springframework.boot' version "$spring_boot_version"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-allopen'
apply plugin: 'io.spring.dependency-management'

jar {
    // https://github.com/spring-projects/spring-boot/issues/16689
    enabled = true
}

bootJar {
    enabled = true
    classifier = "standalone"
    mainClassName = "nl.tno.federated.semantic.adapter.SemanticAdapterApplicationKt"
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("be.ugent.rml:rmlmapper") {
        exclude group: "org.apache.jena"
    }
    implementation "org.eclipse.rdf4j:rdf4j-rio-api:$rdf4j_version"
    implementation "org.eclipse.rdf4j:rdf4j-rio-turtle:$rdf4j_version"
    implementation "org.eclipse.rdf4j:rdf4j-runtime:$rdf4j_version"
    implementation "org.apache.jena:apache-jena-libs"
    implementation "io.springfox:springfox-swagger2"
    implementation "io.springfox:springfox-swagger-ui"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.3"
        apiVersion = "1.3"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}
