apply plugin: 'kotlin'

dependencies {

    // We need to use compile instead of implementation because the corda plugin does not recognize implementation
    // and the dependency wont be included in the generated cordapp workflows.jar
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"
    compile "org.eclipse.rdf4j:rdf4j-rio-turtle"
    compile "org.eclipse.rdf4j:rdf4j-rio-api"

    // JSON Web Token support (for iSHARE)
    compile "io.jsonwebtoken:jjwt-impl:0.11.5"
    compile "io.jsonwebtoken:jjwt-jackson:0.11.5"
    // JWKS verification (for iSHARE)
    compile "org.bitbucket.b_c:jose4j:0.7.12"

    testImplementation "junit:junit"
    testImplementation "io.mockk:mockk"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.2" // corda 4.9 supports kotlin 1.2.71
        apiVersion = "1.2" // corda 4.9 supports kotlin 1.2.71
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}